version: '3.8'

services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: comfyui-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-123456}
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
      MYSQL_INIT_CONNECT: 'SET NAMES utf8mb4;'
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ../database:/docker-entrypoint-initdb.d:ro
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - comfyui-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis 缓存服务
  redis:
    image: redis:7-alpine
    container_name: comfyui-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - comfyui-network
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # ComfyUI Web Service 主应用
  comfyui-web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: comfyui-web-service
    ports:
      - "${FASTAPI_PORT:-8000}:8000"
      - "${CLIENT_PORT:-8001}:8001"
      - "${ADMIN_PORT:-8002}:8002"
    volumes:
      - ../backend/outputs:/app/backend/outputs
      - ../backend/uploads:/app/backend/uploads
      - ../backend/workflows:/app/backend/workflows
      - ../backend/config.yaml:/app/backend/config.yaml:ro
      - comfyui_logs:/app/logs
      - comfyui_temp:/app/temp
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-123456}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PYTHONPATH=/app/backend
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - comfyui-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: comfyui-nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ../frontend:/usr/share/nginx/html:ro
    depends_on:
      - comfyui-web
    networks:
      - comfyui-network
    restart: unless-stopped
    profiles:
      - with-nginx

# 数据卷定义
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  comfyui_logs:
    driver: local
  comfyui_temp:
    driver: local

# 网络定义
networks:
  comfyui-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
